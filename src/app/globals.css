@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Font */
@font-face {
  font-family: 'ConfilliaBold';
  src: url('/fonts/ConfilliaBold.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

/* === Animated Link Hover Text === */
.text {
  position: relative;
  display: inline-block;
  overflow: hidden;
  height: 1.2em; /* Use em instead of fixed pixels for better scaling */
  line-height: 1.2em;
  font-family: 'ConfilliaBold', sans-serif;
  cursor: pointer;
  text-decoration: none;
}

.text:hover {
  text-decoration: none;
}

.text .block {
  position: absolute;
  top: 0;
  left: 0;
  white-space: nowrap;
  width: 100%;
  height: 100%;
  pointer-events: none;
  display: flex;
}

.text .block:nth-child(2) {
  top: 100%;
}

.letter {
  display: inline-block;
  transition: transform 0.6s cubic-bezier(0.76, 0, 0.024, 1);
  will-change: transform; /* Optimize for animations */
}

.text.play .letter {
  transform: translateY(-100%);
}

/* Ensure proper stacking */
.text .block:first-child {
  z-index: 2;
}

.text .block:nth-child(2) {
  z-index: 1;
}

/* === Trail (if you're using trailing effects or masks elsewhere) === */
.trail-img {
  width: 175px;
  height: 175px;
  position: absolute;
  pointer-events: none;
}

.mask-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.image-layer {
  background-size: cover;
  background-position: center;
  width: 100%;
  height: 100%;
}

nav a {
  text-decoration: none;
  color: white;
  font-weight: 500;
}
.animation::after {
  content: "";
  background-image: url("https://upload.wikimedia.org/wikipedia/commons/7/76/1k_Dissolve_Noise_Texture.png");
  width: 200%;
  height: 200%;
  position: fixed;
  top: 0;
  left: 0;
  opacity: 0.1;
  animation: animateGrain 8s steps(10) infinite;
  pointer-events: none;
}

@keyframes animateGrain {
  0%, 100% { transform: translate(0, 0); }
  10%, 50%, 70%, 90% { transform: translate(-5%, -10%); }
  20%, 40%, 60%, 80% { transform: translate(-15%, -20%); }
  30% { transform: translate(-5%, -10%); }
}

